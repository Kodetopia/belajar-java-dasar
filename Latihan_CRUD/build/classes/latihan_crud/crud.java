package latihan_crud;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author KANG KODING
 */
public class crud extends javax.swing.JFrame {
    DefaultTableModel model;
    private int i;
    /**
     * Creates new form crud
     */
    public crud() {
        initComponents();
        String[] judul = {"NIS","NAMA","KELAS","ALAMAT"};
        model = new DefaultTableModel(judul,0);
        tabelSiswa.setModel(model);
        tampilkan();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        judul = new javax.swing.JLabel();
        nis = new javax.swing.JLabel();
        nama = new javax.swing.JLabel();
        kotakNis = new javax.swing.JTextField();
        kotakNama = new javax.swing.JTextField();
        kelas = new javax.swing.JLabel();
        kotakKelas = new javax.swing.JTextField();
        alamat = new javax.swing.JLabel();
        kotakAlamat = new javax.swing.JTextField();
        tombolCreate = new javax.swing.JButton();
        tombolUpdate = new javax.swing.JButton();
        tombolDelete = new javax.swing.JButton();
        tombolRefresh = new javax.swing.JButton();
        CariAja = new javax.swing.JLabel();
        kotakCari = new javax.swing.JTextField();
        tombolCari = new javax.swing.JButton();
        PanelScroll = new javax.swing.JScrollPane();
        tabelSiswa = new javax.swing.JTable();
        judul1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(246, 113, 13));
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        judul.setBackground(new java.awt.Color(51, 153, 255));
        judul.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        judul.setText("INPUT DATA SISWA !");

        nis.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        nis.setText("NIS");

        nama.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        nama.setText("NAMA");

        kotakNis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kotakNisActionPerformed(evt);
            }
        });

        kelas.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        kelas.setText("KELAS");

        alamat.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        alamat.setText("ALAMAT");

        tombolCreate.setBackground(new java.awt.Color(0, 153, 0));
        tombolCreate.setForeground(new java.awt.Color(255, 255, 255));
        tombolCreate.setText("CREATE");
        tombolCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolCreateActionPerformed(evt);
            }
        });

        tombolUpdate.setBackground(new java.awt.Color(0, 153, 153));
        tombolUpdate.setForeground(new java.awt.Color(255, 255, 255));
        tombolUpdate.setText("UPDATE");
        tombolUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolUpdateActionPerformed(evt);
            }
        });

        tombolDelete.setBackground(new java.awt.Color(153, 0, 0));
        tombolDelete.setForeground(new java.awt.Color(255, 255, 255));
        tombolDelete.setText("DELETE");
        tombolDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolDeleteActionPerformed(evt);
            }
        });

        tombolRefresh.setBackground(new java.awt.Color(255, 102, 0));
        tombolRefresh.setForeground(new java.awt.Color(255, 255, 255));
        tombolRefresh.setText("REFRESH");
        tombolRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolRefreshActionPerformed(evt);
            }
        });

        CariAja.setText("CARI BERDASARKAN NAMA :");

        tombolCari.setBackground(new java.awt.Color(0, 153, 0));
        tombolCari.setForeground(new java.awt.Color(255, 255, 255));
        tombolCari.setText("Find!");
        tombolCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolCariActionPerformed(evt);
            }
        });

        tabelSiswa.setAutoCreateRowSorter(true);
        tabelSiswa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelSiswa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelSiswaMouseClicked(evt);
            }
        });
        PanelScroll.setViewportView(tabelSiswa);

        judul1.setText("@zaenal_switch");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(judul1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(CariAja, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(kotakCari, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tombolCari, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nis, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nama, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tombolCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(kotakNama, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(alamat, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(kotakNis, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(kelas, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tombolUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tombolDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tombolRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 18, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kotakKelas, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kotakAlamat, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelScroll)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(judul, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(judul)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nis)
                    .addComponent(kotakNis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kelas)
                    .addComponent(kotakKelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nama)
                            .addComponent(kotakNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(alamat))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tombolCreate)
                            .addComponent(tombolUpdate)
                            .addComponent(tombolDelete)
                            .addComponent(tombolRefresh)))
                    .addComponent(kotakAlamat, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(PanelScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CariAja)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tombolCari)
                    .addComponent(kotakCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(judul1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void kotakNisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kotakNisActionPerformed
        
    }//GEN-LAST:event_kotakNisActionPerformed

    private void tombolCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolCreateActionPerformed
       try {
            Connection koneksi = DriverManager.getConnection("jdbc:mysql://localhost:3306/reepal","root","KANGCODING100");
            koneksi.createStatement().executeUpdate("insert into siswa values ('"+kotakNis.getText()+"','"+kotakNama.getText()+"','"+kotakKelas.getText()+"','"+kotakAlamat.getText()+"')");
            tampilkan();
            reset();
            JOptionPane.showMessageDialog(this,"DATA SISWA BERHASIL DIINPUT !","PEMBERITAHUAN !!",JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(crud.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "TOLONG INPUTKAN DI TEXT FIELD TERLEBIH DAHULU !!","PERINGATAN !!",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_tombolCreateActionPerformed

    private void tombolRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolRefreshActionPerformed
        // Untuk Refresh ?
        tampilkan();
        reset();
    }//GEN-LAST:event_tombolRefreshActionPerformed

    private void tombolDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolDeleteActionPerformed
        try {
            int i = tabelSiswa.getSelectedRow();
            if (i != -1){
            // Untuk Delete
                Connection koneksi = DriverManager.getConnection("jdbc:mysql://localhost:3306/reepal","root","KANGCODING100");
                koneksi.createStatement().executeUpdate("delete from siswa where nis='"+kotakNis.getText()+"'");
                tampilkan();
                reset();
                JOptionPane.showMessageDialog(this,"DATA SISWA BERHASIL DIHAPUS !","PEMBERITAHUAN !!",JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(this,"TOLONG PILIH DATA SISWA YANG INGIN DIHAPUS !","PEMBERITAHUAN !!",JOptionPane.INFORMATION_MESSAGE);
            }
            } catch (SQLException ex) {
            Logger.getLogger(crud.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tombolDeleteActionPerformed

    private void tombolUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolUpdateActionPerformed
        try {
            // Untuk Update
            int i = tabelSiswa.getSelectedRow();
            if (i != -1){
            Connection koneksi = DriverManager.getConnection("jdbc:mysql://localhost:3306/reepal","root","KANGCODING100");
            koneksi.createStatement().executeUpdate("update siswa set nama='"+kotakNama.getText()+"', kelas='"+kotakKelas.getText()+"', alamat='"+kotakAlamat.getText()+"' where nis='"+kotakNis.getText()+"'");
            tampilkan();
            reset();
            JOptionPane.showMessageDialog(this,"DATA SISWA BERHASIL DIUPDATE !","PEMBERITAHUAN !!",JOptionPane.INFORMATION_MESSAGE);
            }else{
            JOptionPane.showMessageDialog(this, "TOLONG PILIH DATA SISWA YANG INGIN DIUBAH !","PEMBERITAHUAN !!",JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (SQLException ex) {
            Logger.getLogger(crud.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex);
        }
    }//GEN-LAST:event_tombolUpdateActionPerformed

    private void tabelSiswaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelSiswaMouseClicked
        // Event Mouse Ditekan
        int i = tabelSiswa.getSelectedRow();
        if(i != -1){
            kotakNis.setText(model.getValueAt(i, 0).toString());
            kotakNama.setText(model.getValueAt(i, 1).toString());
            kotakKelas.setText(model.getValueAt(i, 2).toString());
            kotakAlamat.setText(model.getValueAt(i, 3).toString());
        }else {
            JOptionPane.showMessageDialog(this, "Tolong Pilih Data Yang Ingin di Ubah !","PEMBERITAHUAN !!",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_tabelSiswaMouseClicked

    private void tombolCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolCariActionPerformed
        // Untuk Tombol Pencarian !!
        int row = tabelSiswa.getRowCount();
        for(int s = 0;s<row;s++){
            model.removeRow(0);
        }
        try {
            int i = tabelSiswa.getSelectedRow();
            Connection koneksi = DriverManager.getConnection("jdbc:mysql://localhost:3306/reepal","root","KANGCODING100");
            ResultSet rs = koneksi.createStatement().executeQuery("SELECT * FROM siswa where nama='"+kotakCari.getText()+"'");
            
            while(rs.next()){
                String data[] = {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4)};
                model.addRow(data);
            }
        } catch (SQLException ex) {
            Logger.getLogger(crud.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tombolCariActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(crud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(crud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(crud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(crud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new crud().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CariAja;
    private javax.swing.JScrollPane PanelScroll;
    private javax.swing.JLabel alamat;
    private javax.swing.JLabel judul;
    private javax.swing.JLabel judul1;
    private javax.swing.JLabel kelas;
    private javax.swing.JTextField kotakAlamat;
    private javax.swing.JTextField kotakCari;
    private javax.swing.JTextField kotakKelas;
    private javax.swing.JTextField kotakNama;
    private javax.swing.JTextField kotakNis;
    private javax.swing.JLabel nama;
    private javax.swing.JLabel nis;
    private javax.swing.JTable tabelSiswa;
    private javax.swing.JButton tombolCari;
    private javax.swing.JButton tombolCreate;
    private javax.swing.JButton tombolDelete;
    private javax.swing.JButton tombolRefresh;
    private javax.swing.JButton tombolUpdate;
    // End of variables declaration//GEN-END:variables

    private void tampilkan() {
        int row = tabelSiswa.getRowCount();
        for(int s = 0;s<row;s++){
            model.removeRow(0);
        }
        try {
            Connection koneksi = DriverManager.getConnection("jdbc:mysql://localhost:3306/reepal","root","KANGCODING100");
            ResultSet rs = koneksi.createStatement().executeQuery("SELECT * FROM siswa");
            while(rs.next()){
                String data[] = {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4)};
                model.addRow(data);
            }
        } catch (SQLException ex) {
            Logger.getLogger(crud.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    private void reset() {
        kotakNis.setText("");
        kotakNama.setText("");
        kotakKelas.setText("");
        kotakAlamat.setText("");
        kotakCari.setText("");
    }
}
